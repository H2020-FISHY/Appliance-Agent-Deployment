---
- import_tasks: facts/container.yml

- name: Check if {{ service_name_altered }} already running
  command: docker inspect {{ service_name_altered }}
  register: service_running
  ignore_errors: true

- meta: end_play
  when: no_restart is defined and no_restart and not force_restart and service_running is succeeded and service_running.stdout == 'running'

- name: If {{ service_name_altered }} already running, remove it
  command: docker rm -f {{ service_name_altered }}
  when: service_running is succeeded

- name: Run service {{ service_name_altered }}
  command: docker run -d {{ start_args }}
  register: service_run_error_check
  when: run_to_completion is undefined or run_to_completion is defined and not run_to_completion
  ignore_errors: true

- name: if run command errored, check if it's the intermittent failed to create endpoint error and remove container
  command: docker rm -f {{ service_name_altered }}
  when: service_run_error_check is failed and service_run_error_check.stderr.find("failed to create endpoint") != -1

- name: if run command errored, check if it's the intermittent failed to create endpoint error and retry run
  command: docker run -d {{ start_args }}
  when: service_run_error_check is failed and service_run_error_check.stderr.find("failed to create endpoint") != -1

- name: on other errors, output error and fail
  debug:
    var: service_run_error_check
  when: service_run_error_check is failed and service_run_error_check.stderr.find("failed to create endpoint") == -1

- name: error out
  shell: "false"
  when: service_run_error_check is failed and service_run_error_check.stderr.find("failed to create endpoint") == -1

- name: Run and check result {{ service_name_altered }}
  command: docker run --rm {{ start_args }}
  register: service_run_result
  when: run_to_completion is defined and run_to_completion
